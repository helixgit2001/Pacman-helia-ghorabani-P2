import engine.physics.BoxCollider;import engine.physics.Position;import org.junit.jupiter.api.Test;import static org.junit.jupiter.api.Assertions.*;public class TestUnitBoxCollider {    @Test    public void hitSimpleTest(){        try {            BoxCollider collider1 = new BoxCollider(new Position(0, 0), new Position(5, 5));            BoxCollider collider2 = new BoxCollider(new Position(2, 2), new Position(7, 7));            BoxCollider collider3 = new BoxCollider(new Position(5, 5), new Position(10, 10));            assertTrue(collider1.hit(collider2));            assertFalse(collider1.hit(collider3));            assertTrue(collider2.hit(collider3));            System.out.println("OK HIT!");        } catch (Exception e) {            System.out.println("FIX HIT!");        }    }    @Test    public void moveSimpleTest(){        try {            BoxCollider collider1 = new BoxCollider(new Position(0, 0), new Position(3, 5)); // Center 1.5, 2.5            collider1.move(new Position(3,5)); // Center now 3, 5            collider1.getPos1().setX(1.5);            collider1.getPos1().setY(2.5);            collider1.getPos2().setX(4.5);            collider1.getPos2().setY(7.5);            assertEquals(1.5, collider1.getPos1().getX());            assertEquals(2.5, collider1.getPos1().getY());            assertEquals(4.5, collider1.getPos2().getX());            assertEquals(7.5, collider1.getPos2().getY());            System.out.println("OK MOVEMENT!");        } catch (Exception e) {            System.out.println("FIX MOVEMENT!");        }    }    @Test    public void hitAfterDisplacementTest(){        try {            BoxCollider collider1 = new BoxCollider(new Position(0, 0), new Position(5, 5));            BoxCollider collider2 = new BoxCollider(new Position(2, 2), new Position(7, 7));            collider2.move(new Position(6.5, 6.5));            assertTrue(collider1.hit(collider2));            collider2.move(new Position(7.5, 7.5));            assertTrue(collider1.hit(collider2));            System.out.println("OK DISPLACEMENT!");        } catch (Exception e) {            System.out.println("FIX DISPLACEMENT!");        }    }    @Test    public void exitSimpleTest(){        BoxCollider collider1 = new BoxCollider(new Position(595, 0), new Position(605, 10));        assertTrue(collider1.exit(new Position(0, 0), new Position(600, 300)));        System.out.println("OK EXIT!");    }    @Test    public void exitAfterDisplacement(){        try {            BoxCollider collider1 = new BoxCollider(new Position(0,0), new Position(5,5));            assertFalse(collider1.exit(new Position(0, 0), new Position(600, 300)));            collider1.move(new Position(.0, .0));            assertFalse(collider1.exit(new Position(0, 0), new Position(600, 300)));            collider1.move(new Position(599., 2.5));            assertFalse(collider1.exit(new Position(0, 0), new Position(600, 300)));            System.out.println("OK EXIT AFTER DISPLACEMENT!");        } catch (Exception e) {            System.out.println("FIX EXIT AFTER DISPLACEMENT!");        }    }}